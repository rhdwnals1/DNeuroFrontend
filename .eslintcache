[{"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/index.js":"1","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/Routes.js":"2","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/styles/GlobalStyle.js":"3","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/styles/Theme.js":"4","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/styles/CommonStyle.js":"5","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/SignIn/SignIn.js":"6","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/Survey/Survey.js":"7","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/Main/Main.js":"8","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/Result/Result.js":"9","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/SignUp/SignUp.js":"10","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/config.js":"11","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/SignIn/data/data.js":"12","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/SignUp/Certification.js":"13","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/Survey/components/ProgressBar.js":"14"},{"size":307,"mtime":1608214255335,"results":"15","hashOfConfig":"16"},{"size":974,"mtime":1609380345629,"results":"17","hashOfConfig":"16"},{"size":883,"mtime":1608214253383,"results":"18","hashOfConfig":"16"},{"size":348,"mtime":1608982380672,"results":"19","hashOfConfig":"16"},{"size":1650,"mtime":1609704303244,"results":"20","hashOfConfig":"16"},{"size":5975,"mtime":1609347616592,"results":"21","hashOfConfig":"16"},{"size":6222,"mtime":1609704306972,"results":"22","hashOfConfig":"16"},{"size":3449,"mtime":1609380409624,"results":"23","hashOfConfig":"16"},{"size":3402,"mtime":1609347616592,"results":"24","hashOfConfig":"16"},{"size":11625,"mtime":1609380470559,"results":"25","hashOfConfig":"16"},{"size":322,"mtime":1609380583016,"results":"26","hashOfConfig":"16"},{"size":338,"mtime":1609347616592,"results":"27","hashOfConfig":"16"},{"size":5079,"mtime":1609380735557,"results":"28","hashOfConfig":"16"},{"size":1168,"mtime":1609704306007,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1qox0sf",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/index.js",[],["63","64"],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/Routes.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/styles/GlobalStyle.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/styles/Theme.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/styles/CommonStyle.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/SignIn/SignIn.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/Survey/Survey.js",["65","66","67","68","69","70","71"],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/Main/Main.js",["72","73"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { boxShadow } from \"../../styles/CommonStyle\";\nimport { theme, imgUrl } from \"../../styles/CommonStyle\";\nimport styled from \"styled-components\";\n\nconst Main = () => {\n  const [login, setLogin] = useState(false);\n  const [token, setToken] = useState(true);\n\n  const isLogin = localStorage.getItem(\"token\");\n  const isToken = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    if (isLogin) {\n      setLogin(true);\n    } else {\n      setLogin(false);\n    }\n  });\n  useEffect(() => {\n    if (isToken) {\n      setToken(true);\n    } else {\n      setToken(false);\n    }\n  });\n\n  const history = useHistory();\n  const goToSurvey = () => {\n    history.push(\"/Survey\");\n  };\n  const goToSignIn = () => {\n    history.push(\"/SignIn\");\n  };\n  const goToSignUp = () => {\n    history.push(\"/Certification\");\n  };\n\n  const goToLogout = () => {\n    localStorage.removeItem(\"token\");\n    history.push(\"/Main\");\n  };\n\n  const doNotEnter = () => {\n    alert(\"로그인이 필요합니다.\");\n  };\n\n  return (\n    <WrapMain>\n      <Logo>\n        <img src={imgUrl.logo} alt=\"dneuro\" />\n      </Logo>\n      <Title>\n        내 성격에 딱!\n        <br />\n        어울리는 유형은?\n      </Title>\n      <SubTitle>테스트로 보는 내 성격, MBTI</SubTitle>\n      {token ? (\n        <Test onClick={goToSurvey}>테스트 시작</Test>\n      ) : (\n        <Test onClick={doNotEnter}> 테스트 시작</Test>\n      )}\n      <Container>\n        {login ? (\n          <Login onClick={goToLogout}>로그아웃</Login>\n        ) : (\n          <Login onClick={goToSignIn}>로그인</Login>\n        )}\n        <SignUp onClick={goToSignUp}>회원가입</SignUp>\n      </Container>\n    </WrapMain>\n  );\n};\n\nexport default Main;\n\nconst WrapMain = styled.section`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst Logo = styled.footer`\n  width: 110px;\n  height: 120px;\n  margin: 130px auto 0;\n`;\n\nconst Title = styled.div`\n  margin: 40px auto 45px;\n  padding: 0 10px;\n  font-size: 32px;\n  font-weight: 800;\n  color: #222;\n  line-height: 1.6;\n  letter-spacing: -1px;\n`;\n\nconst SubTitle = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  letter-spacing: -0.5px;\n  margin-bottom: 30px;\n  padding: 0 10px;\n`;\n\nconst Test = styled.button`\n  width: 256px;\n  height: 50px;\n  margin: 20px auto;\n  border: solid 0.75px #ee762c;\n  border-radius: 32px;\n  background-color: ${theme.pink};\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 600;\n  outline-style: none;\n\n  &:hover {\n    ${boxShadow};\n    background-color: ${theme.pink};\n    cursor: pointer;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`;\n\nconst Login = styled.div`\n  padding-top: 7px;\n  color: #222;\n  font-size: 17px;\n  font-weight: 700;\n  margin: 0 10px;\n\n  &:hover {\n    cursor: pointer;\n    width: 80px;\n    height: 30px;\n    border: 1px solid pink;\n    border-radius: 15px;\n    color: #fff;\n    background-color: ${theme.pink};\n  }\n`;\n\nconst SignUp = styled.div`\n  padding-top: 7px;\n  color: #222;\n  font-size: 17px;\n  font-weight: 700;\n  margin: 0 10px;\n\n  &:hover {\n    cursor: pointer;\n    width: 80px;\n    height: 30px;\n    border: 1px solid pink;\n    border-radius: 15px;\n    color: #fff;\n    background-color: ${theme.pink};\n  }\n`;\n","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/Result/Result.js",["74"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { RESULT_DATA } from \"../../config\";\nimport {\n  boxShadow,\n  justifyCenter,\n  imgUrl,\n  theme,\n} from \"../../styles/CommonStyle\";\n\nconst Result = () => {\n  const history = useHistory();\n  const goToMain = () => {\n    history.push(\"/Main\");\n  };\n\n  const [content, setContent] = useState();\n  const [percent, setPercent] = useState();\n\n  useEffect(() => {\n    fetch(`${RESULT_DATA}`)\n      .then((res) => res.json())\n      .then((res) => {\n        setContent(res.data.content);\n        setPercent(res.data.percent);\n      });\n  }, []);\n\n  const myType = content && content.slice(0, content.indexOf(\"\\r\"));\n  const firstContent =\n    content && content.slice(content.indexOf(\"\\r\"), content.lastIndexOf(\"\\r\"));\n  const secondContent = content && content.slice(content.lastIndexOf(\"\\r\"));\n\n  return (\n    <Fragment>\n      <WrapResult>\n        <Logo>\n          <img src=\"/images/JM/dneurologo.png\" alt=\"Logo\" />\n        </Logo>\n        <Explain>\n          <div>나의 유형은</div>\n          <div>{myType}</div>\n        </Explain>\n        <Img>\n          <img src=\"/images/JM/3.png\" alt=\"\" />\n        </Img>\n        <Content>\n          <div>{firstContent}</div>\n          <div>{secondContent}</div>\n        </Content>\n        <Container>\n          <div>MBTI를 한 사람 중 나와 같은 유형은?</div>\n          <div>{percent}%</div>\n        </Container>\n        <Button onClick={goToMain}>테스트 다시하기</Button>\n      </WrapResult>\n    </Fragment>\n  );\n};\n\nexport default Result;\n\nconst WrapResult = styled.section`\n  ${justifyCenter}\n  flex-direction: column;\n  width: 600px;\n  margin: 50px auto;\n`;\n\nconst Logo = styled.div`\n  ${justifyCenter}\n\n  img {\n    width: 110px;\n    height: 120px;\n  }\n`;\n\nconst Explain = styled.div`\n  div {\n    ${justifyCenter}\n    &:first-child {\n      margin-top: 35px;\n      font-size: 18px;\n      font-weight: 700;\n      color: rgba(0, 0, 0, 0.3);\n    }\n    &:last-child {\n      margin-top: 20px;\n      font-size: 25px;\n      font-weight: 800;\n      color: #222;\n    }\n  }\n`;\n\nconst Img = styled.div`\n  ${justifyCenter}\n\n  img {\n    width: 300px;\n    height: 300px;\n  }\n`;\n\nconst Content = styled.div`\n  text-align: left;\n  margin: 5px 95px 0;\n  font-size: 15px;\n  line-height: 20px;\n  color: rgba(0, 0, 0, 0.6);\n  letter-spacing: -0.8px;\n\n  div {\n    &:last-child {\n      margin-bottom: 30px;\n    }\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  border: 1px solid #dfdfdf;\n  border-radius: 5px;\n  width: 410px;\n  height: 180px;\n  margin: 0 auto;\n\n  div {\n    &:first-child {\n      font-size: 22px;\n      font-weight: 700;\n      letter-spacing: -0.5px;\n      color: #222;\n      margin-bottom: 24px;\n    }\n\n    &:last-child {\n      font-size: 45px;\n      font-weight: 700;\n      letter-spacing: -0.5px;\n      color: ${theme.pink};\n    }\n  }\n`;\n\nconst Button = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 410px;\n  height: 71px;\n  margin: 40px auto;\n  text-align: center;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 700;\n  background-color: ${theme.pink};\n  color: #fff;\n  border: 1px solid #f2f2f2;\n  border-radius: 30px;\n\n  &:hover {\n    cursor: pointer;\n    ${boxShadow};\n  }\n`;\n","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/SignUp/SignUp.js",["75"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { justifyCenter, theme } from \"../../styles/CommonStyle\";\nimport { VER1_API, SIGNUP_DATA } from \"../../config\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst SignUp = () => {\n  const history = useHistory();\n  const [id, setId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [repw, setRePw] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [month, setMonth] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [nationality, setNationality] = useState(\"\");\n  const [nation, setNation] = useState([]);\n  const [monthBirth, setMonthBirth] = useState([]);\n\n  const idValue = id + \"@\" + email;\n  const birthValue = year + \"-\" + month + \"-\" + day;\n\n  useEffect(() => {\n    fetch(SIGNUP_DATA)\n      .then((res) => res.json())\n      .then((res) => setNation(res.nationality));\n    fetch(SIGNUP_DATA)\n      .then((res) => res.json())\n      .then((res) => setMonthBirth(res.birthMonth));\n  }, []);\n\n  const goToMain = (e) => {\n    e.preventDefault();\n    fetch(`${VER1_API}/user/signup`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: idValue,\n        password: pw,\n        country: nationality,\n        sex: gender,\n        birthday: birthValue,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res.message);\n        if ((res.messege = \"SUCCESS\")) {\n          alert(\"회원가입 성공\");\n          history.push(\"/\");\n        } else {\n          alert(\"실패!\");\n        }\n      });\n  };\n\n  const handleChangeId = (e) => {\n    const { value } = e.target;\n    setId(value);\n  };\n\n  const handleChangeEmail = (e) => {\n    const { value } = e.target;\n    setEmail(value);\n  };\n\n  const handleChangePw = (e) => {\n    const { value } = e.target;\n    setPw(value);\n  };\n\n  const handleChangeRePw = (e) => {\n    const { value } = e.target;\n    setRePw(value);\n  };\n\n  const handleChangeYear = (e) => {\n    const { value } = e.target;\n    setYear(value);\n  };\n\n  const handleChangeMonth = (e) => {\n    const { value } = e.target;\n    setMonth(value);\n  };\n\n  const handleChangeDay = (e) => {\n    const { value } = e.target;\n    setDay(value);\n  };\n\n  const handleChangeGender = (e) => {\n    const { value } = e.target;\n    setGender(value);\n  };\n\n  const handleNationality = (e) => {\n    const { value } = e.target;\n    setNationality(value);\n  };\n\n  console.log(idValue, pw, gender, nationality, birthValue);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Fragment>\n        <Background>\n          <WrapSignUp>\n            <Header>\n              <HeaderImage src=\"https://lh3.googleusercontent.com/VbAt1Idbi-4NHicLjzGdgRFA9hd8hoaOk6SGD2be-BOrNzjlHcHSefupjSDPDkT3M2U40Eu2YOhY9wvAr_F_P7ZI9NOFAuUHvaliXyZ6ap_qAkV2fI2IDKHw17c7ULEL_JcLmmbQTgP2L6mPiiWPgjkXHB9pGL2RNX1TTLoa8E1gVMA2BvWWn7fD8u5kNqk4FYSSq096sZ6ZlEkNsjtezfuI_yd4XUCcEcWW1An41vgwIbcI8tyK-1ZV3IXjC8WF6KUyceEfgBa7hGuO-XDMGwGymBbl156OeEcz6k1VlNQsuunAw-jLll5CfzTmsYgGeuT2gn9U9pZnkAtq3QrK6Ub7AhfJC64MWlvTPbLy4eR1qTMd6w5fE_lvqo548Yx9BngYxUPyIKgA69aFygz5COyY3bZ73pKK1t9-t8OnOE2w27_gxIoIk2JLBfYlLOFlBJI73JPpHQ0AqJHz48Sm2XKjjDtCBDdnSJ4SEfdAJEjgYuGwbR8tpawVwsnQ4vinZvCZlgadMDbmdnU74LU28z4SOPeBvjUnwjN3x7jbUfQuBw--e0gVsdOwu08MiwBXWf_7LigknjlQ7c9RgybqG72e1RoZzcc_y3h6RNOY2nO71aOupVk3MX6u8MZ0mfOSUeLTxjSL1wyKgubbgqJult-E8rf95IiYL3F5T0GxF5qGi3_QxkCExcWpWweZeQ=w869-h980-no?authuser=0z\" />\n            </Header>\n            <Body>\n              <BodyHeader>회원가입</BodyHeader>\n              <InfoNeed>\n                <WrapEmail>\n                  <h3>이메일</h3>\n                  <WrapInput>\n                    <IdInput\n                      placeholder=\"아이디를 입력해주세요.\"\n                      onChange={handleChangeId}\n                    ></IdInput>\n                    <span>@</span>\n                    <EmailInput onChange={handleChangeEmail}>\n                      <option>이메일을 선택해주세요</option>\n                      <option>naver.com</option>\n                      <option>gmail.com</option>\n                    </EmailInput>\n                  </WrapInput>\n                </WrapEmail>\n                <WrapPassword>\n                  <h3>비밀번호</h3>\n                  <p>8자 이상 입력해주세요.</p>\n                  <PwInput type=\"password\" onChange={handleChangePw} />\n                </WrapPassword>\n                <WrapPassword>\n                  <h3>비밀번호 확인</h3>\n                  <PwInput type=\"password\" onChange={handleChangeRePw} />\n                </WrapPassword>\n                <WrapBirth>\n                  <h3>생년월일</h3>\n                  <WrapDateInput>\n                    <DateInput placeholder=\"년\" onChange={handleChangeYear}></DateInput>\n                    <MonthInput onChange={handleChangeMonth}>\n                      <option>월</option>\n                      {monthBirth[0] &&\n                        monthBirth.map((el) => {\n                          return <option key={el.id}>{el.month}</option>;\n                        })}\n                    </MonthInput>\n                    <DateInput placeholder=\"일\" onChange={handleChangeDay}></DateInput>\n                  </WrapDateInput>\n                </WrapBirth>\n                <WrapGender>\n                  <h3>성별</h3>\n                  <WrapGenderInput>\n                    <GenderInput onChange={handleChangeGender}>\n                      <option>선택해주세요</option>\n                      <option>남자</option>\n                      <option>여자</option>\n                    </GenderInput>\n                  </WrapGenderInput>\n                </WrapGender>\n                <WrapNationality>\n                  <h3>국적</h3>\n                  <NationalityInput onChange={handleNationality}>\n                    <option>선택해주세요</option>\n                    {nation[0] &&\n                      nation.map((el) => {\n                        return <option key={el.id}>{el.country}</option>;\n                      })}\n                  </NationalityInput>\n                </WrapNationality>\n              </InfoNeed>\n              <Agreement>\n                <h3>약관 동의</h3>\n                <WrapContents>\n                  <AgreeAll>\n                    <CheckBox type=\"checkbox\" />\n                    <h4>전체 동의</h4>\n                  </AgreeAll>\n                  <Clauses>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>만 14세 이상입니다.</span>\n                    </Clause>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>\n                        <Link to=\"\">이용약관</Link>\n                      </span>\n                    </Clause>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>\n                        <Link to=\"\">개인정보처리방침</Link>\n                      </span>\n                    </Clause>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>이벤트, 프로모션 알림 메일 및 SMS 수신</span>\n                    </Clause>\n                  </Clauses>\n                </WrapContents>\n              </Agreement>\n              <CompleteBtn>\n                <Button onClick={goToMain}>회원가입</Button>\n              </CompleteBtn>\n            </Body>\n          </WrapSignUp>\n        </Background>\n      </Fragment>\n    </ThemeProvider>\n  );\n};\n\nexport default SignUp;\n\nconst Background = styled.section`\n  ${justifyCenter}\n`;\n\nconst WrapSignUp = styled.section`\n  width: 400px;\n  padding: 20px;\n`;\n\nconst Header = styled.section`\n  ${justifyCenter}\n  margin: 50px 0 0 0;\n`;\n\nconst HeaderImage = styled.img`\n  width: 110px;\n  height: 120px;\n  margin: 0 0 50px 0;\n`;\n\nconst Body = styled.section``;\n\nconst BodyHeader = styled.h1`\n  font-size: 1.4rem;\n  font-weight: bold;\n  margin: 50px 0;\n`;\n\nconst InfoNeed = styled.div``;\n\nconst WrapEmail = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  padding-top: 50px;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nconst WrapInput = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 15px;\n\n  span {\n    margin: 0 5px;\n    color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst IdInput = styled.input`\n  width: 50%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n\n  &::placeholder {\n    font-size: 13px;\n    color: rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst EmailInput = styled.select`\n  width: 50%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n  padding: 3px;\n`;\n\nconst WrapPassword = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 40px;\n\n  p {\n    margin-top: 15px;\n    color: rgba(0, 0, 0, 0.3);\n    font-size: 14px;\n    font-weight: normal;\n  }\n`;\n\nconst PwInput = styled.input`\n  margin-top: 15px;\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst WrapBirth = styled.div`\n  margin-top: 40px;\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst WrapDateInput = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n\n  span {\n    font-size: 13px;\n    font-weight: normal;\n  }\n`;\n\nconst DateInput = styled.input`\n  width: 31%;\n  height: 35px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst MonthInput = styled.select`\n  width: 31%;\n  height: 35px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst WrapGender = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 40px;\n`;\n\nconst WrapGenderInput = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 15px;\n`;\n\nconst GenderInput = styled.select`\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst WrapNationality = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 40px;\n`;\n\nconst NationalityInput = styled.select`\n  margin-top: 15px;\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst Agreement = styled.div`\n  margin-top: 50px;\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst WrapContents = styled.div`\n  margin-top: 30px;\n  padding: 20px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst AgreeAll = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  font-size: 14px;\n`;\n\nconst Clauses = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 13px;\n  font-weight: normal;\n`;\n\nconst Clause = styled.div`\n  display: flex;\n  align-items: center;\n  height: 20px;\n  margin-top: 20px;\n`;\n\nconst CheckBox = styled.input`\n  margin-right: 10px;\n`;\n\nconst CompleteBtn = styled.form`\n  margin: 50px 0 100px 0;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  height: 60px;\n  background-color: #000;\n  border: none;\n  color: white;\n  font-size: 20px;\n  font-weight: 700px;\n  outline-style: none;\n\n  &:hover {\n    transform: scale(1.05);\n    transition: 0.2s;\n    cursor: pointer;\n  }\n`;\n","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/config.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/SignIn/data/data.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/SignUp/Certification.js",["76","77"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { flexCenter, imgUrl, theme } from \"../../styles/CommonStyle\";\nimport { SMS_API } from \"../../config\";\n\nconst Certification = ({ history }) => {\n  const [userName, setUserName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [certifiedNumber, setCertifiedNumber] = useState(\"\");\n  const [authResult, setAuthResult] = useState();\n\n  const handleUserName = (e) => {\n    const { value } = e.target;\n    setUserName(value);\n  };\n\n  const handlePhoneNumber = (e) => {\n    const { value } = e.target;\n    setPhoneNumber(value);\n  };\n\n  const handleCertification = (e) => {\n    const { value } = e.target;\n    setCertifiedNumber(value);\n  };\n\n  const postPhoneNumber = () => {\n    fetch(`${SMS_API}/user/sms`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        phone_number: phoneNumber,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res.message);\n        if (res.message === \"SUCCESS\") {\n          alert(\"인증번호가 발송되었습니다.\");\n        }\n      });\n  };\n\n  const checkValidation = () => {\n    fetch(`${SMS_API}/user/sms?phone_number=${phoneNumber}&auth_number=${certifiedNumber}`, {\n      method: \"GET\",\n      // body: JSON.stringify({\n      //   auth_number: certifiedNumber,\n      // }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res.message);\n        if (res.message === \"SUCCESS\") {\n          alert(\"인증 성공!\");\n          setAuthResult(res.message);\n        } else {\n          alert(\"인증번호를 확인해주세요.\");\n        }\n      });\n  };\n\n  const goToSignUp = () => {\n    if (authResult === \"SUCCESS\") {\n      history.push(\"/SignUp\");\n    } else {\n      alert(\"문자인증을 해야 합니다.\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <ThemeProvider theme={theme}>\n        <Certify>\n          <Logo src={imgUrl.logo} alt=\"디뉴로 로고\" />\n          <WrapHeader>\n            <Header>본인 인증</Header>\n          </WrapHeader>\n          <WrapMain>\n            <Main>\n              <WrapUser>\n                <Inputbox onChange={handleUserName} placeholder=\"이름\" />\n              </WrapUser>\n              <WrapNumber>\n                <Inputbox onChange={handlePhoneNumber} placeholder=\"전화번호\" />\n              </WrapNumber>\n              <ConfirmButton onClick={postPhoneNumber}>인증</ConfirmButton>\n            </Main>\n          </WrapMain>\n          <CertifyNumber>\n            <span>인증번호를 입력 해주세요.</span>\n            <CertifyInputbox onChange={handleCertification} />\n            <ConfirmButton onClick={checkValidation}>확인</ConfirmButton>\n            <SignUpButton onClick={goToSignUp}>회원가입으로 이동</SignUpButton>\n          </CertifyNumber>\n        </Certify>\n      </ThemeProvider>\n    </Fragment>\n  );\n};\n\nexport default Certification;\n\nconst Logo = styled.img`\n  width: 120px;\n  height: 110px;\n  margin: 70px 0;\n`;\n\nconst Certify = styled.section`\n  font-size: 25px;\n  ${flexCenter};\n  flex-direction: column;\n`;\n\nconst WrapHeader = styled.div`\n  ${flexCenter};\n  width: 1200px;\n\n  background-color: #fff;\n  border-bottom: 3px solid rgba(0, 0, 0, 0.2);\n`;\n\nconst Header = styled.h1`\n  ${flexCenter};\n  width: 600px;\n  padding: 20px;\n  margin-bottom: 40px;\n  color: #000;\n  /* background-color: ${theme.skyblue}; */\n  border-radius: 5px;\n  font-size: 30px;\n  font-weight: bold;\n`;\n\nconst WrapMain = styled.div`\n  width: 1200px;\n  border-bottom: 3px solid rgba(0, 0, 0, 0.2);\n`;\n\nconst Main = styled.div`\n  ${flexCenter};\n  flex-direction: column;\n  margin: 40px 0;\n  font-size: 17px;\n`;\n\nconst WrapUser = styled.div`\n  ${flexCenter};\n  margin-bottom: 20px;\n\n  span {\n    margin-right: 27px;\n  }\n`;\nconst WrapNumber = styled.div`\n  ${flexCenter};\n\n  span {\n    margin-right: 27px;\n  }\n`;\n\nconst ConfirmButton = styled.button`\n  width: 80px;\n  height: 40px;\n  margin-top: 30px;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  background-color: ${theme.pink};\n  outline-style: none;\n\n  &:hover {\n    transform: scale(1.1);\n    transition: 0.2s;\n    cursor: pointer;\n  }\n`;\n\nconst Inputbox = styled.input`\n  width: 300px;\n  height: 40px;\n  padding: 0 5px 0 10px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  outline-style: none;\n`;\n\nconst CertifyNumber = styled.div`\n  ${flexCenter};\n  flex-direction: column;\n  margin-top: 40px;\n\n  span {\n    margin-bottom: 30px;\n    font-size: 16px;\n  }\n`;\n\nconst CertifyInputbox = styled(Inputbox.withComponent(\"input\"))`\n  width: 150px;\n  margin-top: -5px;\n`;\n\n// const SignUpButton = styled(ConfirmButton.withComponent(\"button\"));\nconst SignUpButton = styled.button`\n  width: 250px;\n  height: 40px;\n  margin-top: 90px;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  background-color: ${theme.navy};\n  outline-style: none;\n  font-size: 16px;\n  font-weight: bold;\n\n  &:hover {\n    transform: scale(1.1);\n    transition: 0.2s;\n    cursor: pointer;\n  }\n`;\n","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/Survey/components/ProgressBar.js",["78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":12,"column":10,"nodeType":"86","messageId":"87","endLine":12,"endColumn":18},{"ruleId":"84","severity":1,"message":"88","line":14,"column":10,"nodeType":"86","messageId":"87","endLine":14,"endColumn":17},{"ruleId":"84","severity":1,"message":"89","line":15,"column":10,"nodeType":"86","messageId":"87","endLine":15,"endColumn":21},{"ruleId":"84","severity":1,"message":"90","line":16,"column":10,"nodeType":"86","messageId":"87","endLine":16,"endColumn":16},{"ruleId":"84","severity":1,"message":"91","line":16,"column":18,"nodeType":"86","messageId":"87","endLine":16,"endColumn":27},{"ruleId":"84","severity":1,"message":"92","line":17,"column":10,"nodeType":"86","messageId":"87","endLine":17,"endColumn":15},{"ruleId":"84","severity":1,"message":"93","line":17,"column":17,"nodeType":"86","messageId":"87","endLine":17,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":14,"column":3,"nodeType":"86","endLine":14,"endColumn":12,"suggestions":"96"},{"ruleId":"94","severity":1,"message":"97","line":21,"column":3,"nodeType":"86","endLine":21,"endColumn":12,"suggestions":"98"},{"ruleId":"84","severity":1,"message":"99","line":8,"column":3,"nodeType":"86","messageId":"87","endLine":8,"endColumn":9},{"ruleId":"84","severity":1,"message":"100","line":12,"column":10,"nodeType":"86","messageId":"87","endLine":12,"endColumn":14},{"ruleId":"84","severity":1,"message":"101","line":1,"column":37,"nodeType":"86","messageId":"87","endLine":1,"endColumn":46},{"ruleId":"84","severity":1,"message":"102","line":7,"column":10,"nodeType":"86","messageId":"87","endLine":7,"endColumn":18},{"ruleId":"84","severity":1,"message":"103","line":4,"column":22,"nodeType":"86","messageId":"87","endLine":4,"endColumn":31},{"ruleId":"84","severity":1,"message":"99","line":4,"column":40,"nodeType":"86","messageId":"87","endLine":4,"endColumn":46},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'progress' is assigned a value but never used.","Identifier","unusedVar","'oldTime' is assigned a value but never used.","'currentTime' is assigned a value but never used.","'result' is assigned a value but never used.","'setResult' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isLogin] as a second argument to the useEffect Hook.",["106"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isToken] as a second argument to the useEffect Hook.",["107"],"'imgUrl' is defined but never used.","'repw' is assigned a value but never used.","'useEffect' is defined but never used.","'userName' is assigned a value but never used.","'boxShadow' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Add dependencies array: [isLogin]",{"range":"112","text":"113"},"Add dependencies array: [isToken]",{"range":"114","text":"115"},[568,568],", [isLogin]",[677,677],", [isToken]"]