
[{"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/index.js":"1","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/Routes.js":"2","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/styles/GlobalStyle.js":"3","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/styles/Theme.js":"4","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/styles/CommonStyle.js":"5","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Survey/Survey.js":"6","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Main/Main.js":"7","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/SignUp/SignUp.js":"8","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/SignIn/SignIn.js":"9","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/SignUp/Certification.js":"10","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Result/Result.js":"11","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/config.js":"12","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Result/Component/HalfDoughnut.js":"13","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Survey/components/ProgressBar.js":"14","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/SignIn/data/data.js":"15","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Result/Component/HalfDoughnuts.js":"16"},{"size":307,"mtime":1609872386465,"results":"17","hashOfConfig":"18"},{"size":974,"mtime":1609872386464,"results":"19","hashOfConfig":"18"},{"size":883,"mtime":1609872386469,"results":"20","hashOfConfig":"18"},{"size":348,"mtime":1609872386469,"results":"21","hashOfConfig":"18"},{"size":1040,"mtime":1609873361709,"results":"22","hashOfConfig":"18"},{"size":6614,"mtime":1609994693177,"results":"23","hashOfConfig":"18"},{"size":3646,"mtime":1609916803572,"results":"24","hashOfConfig":"18"},{"size":11132,"mtime":1609909900973,"results":"25","hashOfConfig":"18"},{"size":6060,"mtime":1609994584857,"results":"26","hashOfConfig":"18"},{"size":4998,"mtime":1609994281314,"results":"27","hashOfConfig":"18"},{"size":5442,"mtime":1609994281313,"results":"28","hashOfConfig":"18"},{"size":246,"mtime":1609872386465,"results":"29","hashOfConfig":"18"},{"size":876,"mtime":1609873361708,"results":"30","hashOfConfig":"18"},{"size":1286,"mtime":1609872386468,"results":"31","hashOfConfig":"18"},{"size":338,"mtime":1609872386467,"results":"32","hashOfConfig":"18"},{"size":873,"mtime":1609873361708,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"9u2k7c",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/index.js",[],["70","71"],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/Routes.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/styles/GlobalStyle.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/styles/Theme.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/styles/CommonStyle.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Survey/Survey.js",["72","73","74"],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Main/Main.js",["75","76"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { boxShadow } from \"../../styles/CommonStyle\";\nimport { theme, imgUrl } from \"../../styles/CommonStyle\";\nimport styled from \"styled-components\";\n\nconst Main = () => {\n  const [login, setLogin] = useState(false);\n  const [token, setToken] = useState(true);\n\n  const isLogin = localStorage.getItem(\"token\");\n  const isToken = localStorage.getItem(\"token\");\n  const isKakaoLogin = localStorage.getItem(\"Kakao_token\");\n  const isKakaoToken = localStorage.getItem(\"Kakao_token\");\n\n  useEffect(() => {\n    if (isLogin || isKakaoLogin) {\n      setLogin(true);\n    } else {\n      setLogin(false);\n    }\n  });\n  useEffect(() => {\n    if (isToken || isKakaoToken) {\n      setToken(true);\n    } else {\n      setToken(false);\n    }\n  });\n\n  const history = useHistory();\n  const goToSurvey = () => {\n    history.push(\"/Survey\");\n  };\n\n  const goToSignIn = () => {\n    history.push(\"/SignIn\");\n  };\n\n  const goToSignUp = () => {\n    history.push(\"/Certification\");\n  };\n\n  const goToLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"Kakao_token\");\n    history.push(\"/Main\");\n  };\n\n  const doNotEnter = () => {\n    alert(\"로그인이 필요합니다.\");\n  };\n\n  return (\n    <WrapMain>\n      <Logo>\n        <img src={imgUrl.logo} alt=\"dneuro\" />\n      </Logo>\n      <Title>\n        내 성격에 딱!\n        <br />\n        어울리는 유형은?\n      </Title>\n      <SubTitle>테스트로 보는 내 성격, MBTI</SubTitle>\n      {token ? (\n        <Test onClick={goToSurvey}>테스트 시작</Test>\n      ) : (\n        <Test onClick={doNotEnter}>테스트 시작</Test>\n      )}\n      <Container>\n        {login ? (\n          <Login onClick={goToLogout}>로그아웃</Login>\n        ) : (\n          <Login onClick={goToSignIn}>로그인</Login>\n        )}\n        <SignUp onClick={goToSignUp}>회원가입</SignUp>\n      </Container>\n    </WrapMain>\n  );\n};\n\nexport default Main;\n\nconst WrapMain = styled.section`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst Logo = styled.footer`\n  width: 110px;\n  height: 120px;\n  margin: 130px auto 0;\n`;\n\nconst Title = styled.div`\n  margin: 40px auto 45px;\n  padding: 0 10px;\n  font-size: 32px;\n  font-weight: 800;\n  color: #222;\n  line-height: 1.6;\n  letter-spacing: -1px;\n`;\n\nconst SubTitle = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  letter-spacing: -0.5px;\n  margin-bottom: 30px;\n  padding: 0 10px;\n`;\n\nconst Test = styled.button`\n  width: 256px;\n  height: 50px;\n  margin: 20px auto;\n  border: solid 0.75px #ee762c;\n  border-radius: 32px;\n  background-color: ${theme.pink};\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 600;\n  outline-style: none;\n\n  &:hover {\n    ${boxShadow};\n    background-color: ${theme.pink};\n    cursor: pointer;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`;\n\nconst Login = styled.div`\n  padding-top: 7px;\n  color: #222;\n  font-size: 17px;\n  font-weight: 700;\n  margin: 0 10px;\n\n  &:hover {\n    cursor: pointer;\n    width: 80px;\n    height: 30px;\n    border: 1px solid pink;\n    border-radius: 15px;\n    color: #fff;\n    background-color: ${theme.pink};\n  }\n`;\n\nconst SignUp = styled.div`\n  padding-top: 7px;\n  color: #222;\n  font-size: 17px;\n  font-weight: 700;\n  margin: 0 10px;\n\n  &:hover {\n    cursor: pointer;\n    width: 80px;\n    height: 30px;\n    border: 1px solid pink;\n    border-radius: 15px;\n    color: #fff;\n    background-color: ${theme.pink};\n  }\n`;\n","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/SignUp/SignUp.js",["77"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { justifyCenter, theme, imgUrl } from \"../../styles/CommonStyle\";\nimport { SJ_API, SIGNUP_DATA } from \"../../config\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst SignUp = () => {\n  const history = useHistory();\n  const [id, setId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [repw, setRePw] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [month, setMonth] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [nationality, setNationality] = useState(\"\");\n  const [nation, setNation] = useState([]);\n  const [monthBirth, setMonthBirth] = useState([]);\n  const [mailList, setMailList] = useState([]);\n\n  const idValue = id + \"@\" + email;\n  const birthValue = year + \"-\" + month + \"-\" + day;\n\n  useEffect(() => {\n    fetch(SIGNUP_DATA)\n      .then((res) => res.json())\n      .then((res) => setNation(res.nationality));\n    fetch(SIGNUP_DATA)\n      .then((res) => res.json())\n      .then((res) => {\n        setMonthBirth(res.birthMonth);\n        setMailList(res.mail);\n      });\n  }, []);\n\n  console.log(mailList);\n\n  const goToMain = (e) => {\n    e.preventDefault();\n    fetch(`${SJ_API}/user/signup`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: idValue,\n        password: pw,\n        country: nationality,\n        sex: gender,\n        birthday: birthValue,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res.message);\n        if ((res.messege = \"SUCCESS\")) {\n          alert(\"회원가입 성공\");\n          history.push(\"/\");\n        } else {\n          alert(\"실패!\");\n        }\n      });\n  };\n\n  const handleChangeId = (e) => {\n    const { value } = e.target;\n    setId(value);\n  };\n\n  const handleChangeEmail = (e) => {\n    const { value } = e.target;\n    setEmail(value);\n  };\n\n  const handleChangePw = (e) => {\n    const { value } = e.target;\n    setPw(value);\n  };\n\n  const handleChangeRePw = (e) => {\n    const { value } = e.target;\n    setRePw(value);\n  };\n\n  const handleChangeYear = (e) => {\n    const { value } = e.target;\n    setYear(value);\n  };\n\n  const handleChangeMonth = (e) => {\n    const { value } = e.target;\n    setMonth(value);\n  };\n\n  const handleChangeDay = (e) => {\n    const { value } = e.target;\n    setDay(value);\n  };\n\n  const handleChangeGender = (e) => {\n    const { value } = e.target;\n    setGender(value);\n  };\n\n  const handleNationality = (e) => {\n    const { value } = e.target;\n    setNationality(value);\n  };\n\n  console.log(idValue, pw, gender, nationality, birthValue);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Fragment>\n        <Background>\n          <WrapSignUp>\n            <Header>\n              <HeaderImage src={imgUrl.logo} />\n            </Header>\n            <Body>\n              <BodyHeader>회원가입</BodyHeader>\n              <InfoNeed>\n                <WrapEmail>\n                  <h3>이메일</h3>\n                  <WrapInput>\n                    <IdInput\n                      placeholder=\"아이디를 입력해주세요.\"\n                      onChange={handleChangeId}\n                    ></IdInput>\n                    <span>@</span>\n                    <EmailInput onChange={handleChangeEmail}>\n                      <option>이메일을 선택해주세요</option>\n                      {mailList &&\n                        mailList.map((mail) => {\n                          console.log(mail.Email);\n                          return <option>{mail.Email}</option>;\n                        })}\n                    </EmailInput>\n                  </WrapInput>\n                </WrapEmail>\n                <WrapPassword>\n                  <h3>비밀번호</h3>\n                  <p>8자 이상 입력해주세요.</p>\n                  <PwInput type=\"password\" onChange={handleChangePw} />\n                </WrapPassword>\n                <WrapPassword>\n                  <h3>비밀번호 확인</h3>\n                  <PwInput type=\"password\" onChange={handleChangeRePw} />\n                </WrapPassword>\n                <WrapBirth>\n                  <h3>생년월일</h3>\n                  <WrapDateInput>\n                    <DateInput placeholder=\"년\" onChange={handleChangeYear}></DateInput>\n                    <MonthInput onChange={handleChangeMonth}>\n                      <option>월</option>\n                      {monthBirth[0] &&\n                        monthBirth.map((el) => {\n                          return <option key={el.id}>{el.month}</option>;\n                        })}\n                    </MonthInput>\n                    <DateInput placeholder=\"일\" onChange={handleChangeDay}></DateInput>\n                  </WrapDateInput>\n                </WrapBirth>\n                <WrapGender>\n                  <h3>성별</h3>\n                  <WrapGenderInput>\n                    <GenderInput onChange={handleChangeGender}>\n                      <option>선택해주세요</option>\n                      <option>남자</option>\n                      <option>여자</option>\n                    </GenderInput>\n                  </WrapGenderInput>\n                </WrapGender>\n                <WrapNationality>\n                  <h3>국적</h3>\n                  <NationalityInput onChange={handleNationality}>\n                    <option>선택해주세요</option>\n                    {nation[0] &&\n                      nation.map((el) => {\n                        return <option key={el.id}>{el.country}</option>;\n                      })}\n                  </NationalityInput>\n                </WrapNationality>\n              </InfoNeed>\n              <Agreement>\n                <h3>약관 동의</h3>\n                <WrapContents>\n                  <AgreeAll>\n                    <CheckBox type=\"checkbox\" />\n                    <h4>전체 동의</h4>\n                  </AgreeAll>\n                  <Clauses>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>만 14세 이상입니다.</span>\n                    </Clause>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>\n                        <Link to=\"\">이용약관</Link>\n                      </span>\n                    </Clause>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>\n                        <Link to=\"\">개인정보처리방침</Link>\n                      </span>\n                    </Clause>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>이벤트, 프로모션 알림 메일 및 SMS 수신</span>\n                    </Clause>\n                  </Clauses>\n                </WrapContents>\n              </Agreement>\n              <CompleteBtn>\n                <Button onClick={goToMain}>회원가입</Button>\n              </CompleteBtn>\n            </Body>\n          </WrapSignUp>\n        </Background>\n      </Fragment>\n    </ThemeProvider>\n  );\n};\n\nexport default SignUp;\n\nconst Background = styled.section`\n  ${justifyCenter}\n`;\n\nconst WrapSignUp = styled.section`\n  width: 400px;\n  padding: 20px;\n`;\n\nconst Header = styled.section`\n  ${justifyCenter}\n  margin: 50px 0 0 0;\n`;\n\nconst HeaderImage = styled.img`\n  width: 110px;\n  height: 120px;\n  margin: 0 0 50px 0;\n`;\n\nconst Body = styled.section``;\n\nconst BodyHeader = styled.h1`\n  font-size: 1.4rem;\n  font-weight: bold;\n  margin: 50px 0;\n`;\n\nconst InfoNeed = styled.div``;\n\nconst WrapEmail = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  padding-top: 50px;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nconst WrapInput = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 15px;\n\n  span {\n    margin: 0 5px;\n    color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst IdInput = styled.input`\n  width: 50%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n\n  &::placeholder {\n    font-size: 13px;\n    color: rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst EmailInput = styled.select`\n  width: 50%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n  padding: 3px;\n`;\n\nconst WrapPassword = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 40px;\n\n  p {\n    margin-top: 15px;\n    color: rgba(0, 0, 0, 0.3);\n    font-size: 14px;\n    font-weight: normal;\n  }\n`;\n\nconst PwInput = styled.input`\n  margin-top: 15px;\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst WrapBirth = styled.div`\n  margin-top: 40px;\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst WrapDateInput = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n\n  span {\n    font-size: 13px;\n    font-weight: normal;\n  }\n`;\n\nconst DateInput = styled.input`\n  width: 31%;\n  height: 35px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst MonthInput = styled.select`\n  width: 31%;\n  height: 35px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst WrapGender = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 40px;\n`;\n\nconst WrapGenderInput = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 15px;\n`;\n\nconst GenderInput = styled.select`\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst WrapNationality = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 40px;\n`;\n\nconst NationalityInput = styled.select`\n  margin-top: 15px;\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst Agreement = styled.div`\n  margin-top: 50px;\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst WrapContents = styled.div`\n  margin-top: 30px;\n  padding: 20px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst AgreeAll = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  font-size: 14px;\n`;\n\nconst Clauses = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 13px;\n  font-weight: normal;\n`;\n\nconst Clause = styled.div`\n  display: flex;\n  align-items: center;\n  height: 20px;\n  margin-top: 20px;\n`;\n\nconst CheckBox = styled.input`\n  margin-right: 10px;\n`;\n\nconst CompleteBtn = styled.form`\n  margin: 50px 0 100px 0;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  height: 60px;\n  background-color: #000;\n  border: none;\n  color: white;\n  font-size: 20px;\n  font-weight: 700px;\n  outline-style: none;\n\n  &:hover {\n    transform: scale(1.05);\n    transition: 0.2s;\n    cursor: pointer;\n  }\n`;\n","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/SignIn/SignIn.js",["78"],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/SignUp/Certification.js",["79","80","81"],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Result/Result.js",["82"],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/config.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Result/Component/HalfDoughnut.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Survey/components/ProgressBar.js",["83","84"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { flexCenter, boxShadow, theme, imgUrl } from \"../../../styles/CommonStyle\";\n\nconst ProgressBar = ({ value, max, color, width, id }) => {\n  ProgressBar.propTypes = {\n    value: PropTypes.number.isRequired,\n    max: PropTypes.number,\n    color: PropTypes.string,\n    width: PropTypes.string,\n  };\n\n  ProgressBar.defaultProps = {\n    max: 100,\n    color: `${theme.pink}`,\n    width: \"300px\",\n  };\n\n  return (\n    <Fragment>\n      <Container color={color} width={width}>\n        <progress value={value} max={max} />\n        <span>{id}/13</span>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default ProgressBar;\n\nconst Container = styled.div`\n  ${flexCenter};\n  margin-bottom: 70px;\n\n  progress[value] {\n    width: ${(props) => props.width};\n    -webkit-appearance: none;\n    appearance: none;\n  }\n\n  progress[value]::-webkit-progress-bar {\n    height: 20px;\n    border-radius: 10px;\n    background-color: rgba(0, 0, 0, 0.15);\n  }\n\n  progress[value]::-webkit-progress-value {\n    height: 20px;\n    border-radius: 10px;\n    background-color: ${(props) => props.color};\n  }\n\n  span {\n    padding: 5px 0 0 10px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n`;\n","/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/SignIn/data/data.js",[],"/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/DneuroFrontEnd/src/pages/Result/Component/HalfDoughnuts.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":20},{"ruleId":"89","severity":1,"message":"93","line":15,"column":9,"nodeType":"91","messageId":"92","endLine":15,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":33,"column":6,"nodeType":"96","endLine":33,"endColumn":8,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":16,"column":3,"nodeType":"91","endLine":16,"endColumn":12,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":23,"column":3,"nodeType":"91","endLine":23,"endColumn":12,"suggestions":"101"},{"ruleId":"89","severity":1,"message":"102","line":12,"column":10,"nodeType":"91","messageId":"92","endLine":12,"endColumn":14},{"ruleId":"89","severity":1,"message":"103","line":5,"column":18,"nodeType":"91","messageId":"92","endLine":5,"endColumn":24},{"ruleId":"89","severity":1,"message":"104","line":1,"column":37,"nodeType":"91","messageId":"92","endLine":1,"endColumn":46},{"ruleId":"89","severity":1,"message":"103","line":4,"column":18,"nodeType":"91","messageId":"92","endLine":4,"endColumn":24},{"ruleId":"89","severity":1,"message":"105","line":7,"column":10,"nodeType":"91","messageId":"92","endLine":7,"endColumn":18},{"ruleId":"89","severity":1,"message":"103","line":5,"column":18,"nodeType":"91","messageId":"92","endLine":5,"endColumn":24},{"ruleId":"89","severity":1,"message":"106","line":4,"column":22,"nodeType":"91","messageId":"92","endLine":4,"endColumn":31},{"ruleId":"89","severity":1,"message":"107","line":4,"column":40,"nodeType":"91","messageId":"92","endLine":4,"endColumn":46},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'surveyId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSurveyData'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect contains a call to 'setLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isLogin, isKakaoLogin] as a second argument to the useEffect Hook.",["111"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isToken, isKakaoToken] as a second argument to the useEffect Hook.",["112"],"'repw' is assigned a value but never used.","'HS_API' is defined but never used.","'useEffect' is defined but never used.","'userName' is assigned a value but never used.","'boxShadow' is defined but never used.","'imgUrl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [getSurveyData]",{"range":"119","text":"120"},"Add dependencies array: [isLogin, isKakaoLogin]",{"range":"121","text":"122"},"Add dependencies array: [isToken, isKakaoToken]",{"range":"123","text":"124"},[1116,1118],"[getSurveyData]",[704,704],", [isLogin, isKakaoLogin]",[829,829],", [isToken, isKakaoToken]"]

