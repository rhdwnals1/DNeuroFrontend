[{"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/index.js":"1","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/Routes.js":"2","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/styles/Theme.js":"3","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/styles/GlobalStyle.js":"4","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Main/Main.js":"5","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/styles/CommonStyle.js":"6","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/SignIn/SignIn.js":"7","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/SignUp/Certification.js":"8","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Result/Result.js":"9","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Survey/Survey.js":"10","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/SignUp/SignUp.js":"11","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/config.js":"12","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Survey/components/ProgressBar.js":"13","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/SignIn/data/data.js":"14","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Result/Component/HalfDoughnut.js":"15","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Main/Component/Footer.js":"16"},{"size":307,"mtime":1609855164965,"results":"17","hashOfConfig":"18"},{"size":974,"mtime":1609855164965,"results":"19","hashOfConfig":"18"},{"size":348,"mtime":1609855164973,"results":"20","hashOfConfig":"18"},{"size":883,"mtime":1609855164973,"results":"21","hashOfConfig":"18"},{"size":3770,"mtime":1609916727704,"results":"22","hashOfConfig":"18"},{"size":1025,"mtime":1609914626700,"results":"23","hashOfConfig":"18"},{"size":5960,"mtime":1609855164971,"results":"24","hashOfConfig":"18"},{"size":5075,"mtime":1609855164971,"results":"25","hashOfConfig":"18"},{"size":3717,"mtime":1609914626700,"results":"26","hashOfConfig":"18"},{"size":6137,"mtime":1609855164972,"results":"27","hashOfConfig":"18"},{"size":11132,"mtime":1609855164971,"results":"28","hashOfConfig":"18"},{"size":246,"mtime":1609855164965,"results":"29","hashOfConfig":"18"},{"size":1168,"mtime":1609855164972,"results":"30","hashOfConfig":"18"},{"size":338,"mtime":1609855164971,"results":"31","hashOfConfig":"18"},{"size":2477,"mtime":1609914626699,"results":"32","hashOfConfig":"18"},{"size":2978,"mtime":1609918024448,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"zsqzxn",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/index.js",[],["74","75"],"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/Routes.js",[],"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/styles/Theme.js",[],"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/styles/GlobalStyle.js",[],"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Main/Main.js",["76","77"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { boxShadow } from \"../../styles/CommonStyle\";\nimport { theme, imgUrl } from \"../../styles/CommonStyle\";\nimport Footer from \"../Main/Component/Footer\";\nimport styled from \"styled-components\";\n\nconst Main = () => {\n  const [login, setLogin] = useState(false);\n  const [token, setToken] = useState(true);\n\n  const isLogin = localStorage.getItem(\"token\");\n  const isKakaoLogin = localStorage.getItem(\"Kakao_token\");\n  const isToken = localStorage.getItem(\"token\");\n  const isKakaoToken = localStorage.getItem(\"Kakao_token\");\n\n  useEffect(() => {\n    if (isLogin || isKakaoLogin) {\n      setLogin(true);\n    } else {\n      setLogin(false);\n    }\n  });\n  useEffect(() => {\n    if (isToken || isKakaoToken) {\n      setToken(true);\n    } else {\n      setToken(false);\n    }\n  });\n\n  const history = useHistory();\n  const goToSurvey = () => {\n    history.push(\"/Survey\");\n  };\n  const goToSignIn = () => {\n    history.push(\"/SignIn\");\n  };\n  const goToSignUp = () => {\n    history.push(\"/Certification\");\n  };\n\n  const goToLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"Kakao_token\");\n    history.push(\"/Main\");\n  };\n\n  const doNotEnter = () => {\n    alert(\"로그인이 필요합니다.\");\n  };\n\n  return (\n    <>\n      <WrapMain>\n        <Logo>\n          <img src={imgUrl.logo} alt=\"dneuro\" />\n        </Logo>\n        <Title>\n          내 성격에 딱!\n          <br />\n          어울리는 유형은?\n        </Title>\n        <SubTitle>테스트로 보는 내 성격, MBTI</SubTitle>\n        {token ? (\n          <Test onClick={goToSurvey}>테스트 시작</Test>\n        ) : (\n          <Test onClick={doNotEnter}> 테스트 시작</Test>\n        )}\n        <Container>\n          {login ? (\n            <Login onClick={goToLogout}>로그아웃</Login>\n          ) : (\n            <Login onClick={goToSignIn}>로그인</Login>\n          )}\n          <SignUp onClick={goToSignUp}>회원가입</SignUp>\n        </Container>\n      </WrapMain>\n      <Footer />\n    </>\n  );\n};\n\nexport default Main;\n\nconst WrapMain = styled.section`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst Logo = styled.footer`\n  width: 110px;\n  height: 120px;\n  margin: 130px auto 0;\n`;\n\nconst Title = styled.div`\n  margin: 40px auto 45px;\n  padding: 0 10px;\n  font-size: 32px;\n  font-weight: 800;\n  color: #222;\n  line-height: 1.6;\n  letter-spacing: -1px;\n`;\n\nconst SubTitle = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  letter-spacing: -0.5px;\n  margin-bottom: 30px;\n  padding: 0 10px;\n`;\n\nconst Test = styled.button`\n  width: 256px;\n  height: 50px;\n  margin: 20px auto;\n  border: solid 0.75px #ee762c;\n  border-radius: 32px;\n  background-color: ${theme.pink};\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 600;\n  outline-style: none;\n\n  &:hover {\n    ${boxShadow};\n    background-color: ${theme.pink};\n    cursor: pointer;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 50px 0;\n`;\n\nconst Login = styled.div`\n  padding-top: 7px;\n  color: #222;\n  font-size: 17px;\n  font-weight: 700;\n  margin: 0 10px;\n\n  &:hover {\n    cursor: pointer;\n    width: 80px;\n    height: 30px;\n    border: 1px solid pink;\n    border-radius: 15px;\n    color: #fff;\n    background-color: ${theme.pink};\n  }\n`;\n\nconst SignUp = styled.div`\n  padding-top: 7px;\n  color: #222;\n  font-size: 17px;\n  font-weight: 700;\n  margin: 0 10px;\n\n  &:hover {\n    cursor: pointer;\n    width: 80px;\n    height: 30px;\n    border: 1px solid pink;\n    border-radius: 15px;\n    color: #fff;\n    background-color: ${theme.pink};\n  }\n`;\n","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/styles/CommonStyle.js",[],"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/SignIn/SignIn.js",[],"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/SignUp/Certification.js",["78","79","80"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { flexCenter, imgUrl, theme } from \"../../styles/CommonStyle\";\nimport { SJ_API, HS_API } from \"../../config\";\n\nconst Certification = ({ history }) => {\n  const [userName, setUserName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [certifiedNumber, setCertifiedNumber] = useState(\"\");\n  const [authResult, setAuthResult] = useState();\n\n  const handleUserName = (e) => {\n    const { value } = e.target;\n    setUserName(value);\n  };\n\n  const handlePhoneNumber = (e) => {\n    const { value } = e.target;\n    setPhoneNumber(value);\n  };\n\n  const handleCertification = (e) => {\n    const { value } = e.target;\n    setCertifiedNumber(value);\n  };\n\n  const postPhoneNumber = () => {\n    fetch(`${HS_API}/user/sms`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        phone_number: phoneNumber,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res.message);\n        if (res.message === \"SUCCESS\") {\n          alert(\"인증번호가 발송되었습니다.\");\n        }\n      });\n  };\n\n  const checkValidation = () => {\n    fetch(`${HS_API}?phone_number=${phoneNumber}&auth_number=${certifiedNumber}`, {\n      method: \"GET\",\n      // body: JSON.stringify({\n      //   auth_number: certifiedNumber,\n      // }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res.message);\n        if (res.message === \"SUCCESS\") {\n          alert(\"인증 성공!\");\n          setAuthResult(res.message);\n        } else {\n          alert(\"인증번호를 확인해주세요.\");\n        }\n      });\n  };\n\n  const goToSignUp = () => {\n    if (authResult === \"SUCCESS\") {\n      history.push(\"/SignUp\");\n    } else {\n      alert(\"문자인증을 해야 합니다.\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <ThemeProvider theme={theme}>\n        <Certify>\n          <Logo src={imgUrl.logo} alt=\"디뉴로 로고\" />\n          <WrapHeader>\n            <Header>본인 인증</Header>\n          </WrapHeader>\n          <WrapMain>\n            <Main>\n              <WrapUser>\n                <Inputbox onChange={handleUserName} placeholder=\"이름\" />\n              </WrapUser>\n              <WrapNumber>\n                <Inputbox onChange={handlePhoneNumber} placeholder=\"전화번호\" />\n              </WrapNumber>\n              <ConfirmButton onClick={postPhoneNumber}>인증</ConfirmButton>\n            </Main>\n          </WrapMain>\n          <CertifyNumber>\n            <span>인증번호를 입력 해주세요.</span>\n            <CertifyInputbox onChange={handleCertification} />\n            <ConfirmButton onClick={checkValidation}>확인</ConfirmButton>\n            <SignUpButton onClick={goToSignUp}>회원가입으로 이동</SignUpButton>\n          </CertifyNumber>\n        </Certify>\n      </ThemeProvider>\n    </Fragment>\n  );\n};\n\nexport default Certification;\n\nconst Logo = styled.img`\n  width: 120px;\n  height: 110px;\n  margin: 70px 0;\n`;\n\nconst Certify = styled.section`\n  font-size: 25px;\n  ${flexCenter};\n  flex-direction: column;\n`;\n\nconst WrapHeader = styled.div`\n  ${flexCenter};\n  width: 1200px;\n\n  background-color: #fff;\n  border-bottom: 3px solid rgba(0, 0, 0, 0.2);\n`;\n\nconst Header = styled.h1`\n  ${flexCenter};\n  width: 600px;\n  padding: 20px;\n  margin-bottom: 40px;\n  color: #000;\n  /* background-color: ${theme.skyblue}; */\n  border-radius: 5px;\n  font-size: 30px;\n  font-weight: bold;\n`;\n\nconst WrapMain = styled.div`\n  width: 1200px;\n  border-bottom: 3px solid rgba(0, 0, 0, 0.2);\n`;\n\nconst Main = styled.div`\n  ${flexCenter};\n  flex-direction: column;\n  margin: 40px 0;\n  font-size: 17px;\n`;\n\nconst WrapUser = styled.div`\n  ${flexCenter};\n  margin-bottom: 20px;\n\n  span {\n    margin-right: 27px;\n  }\n`;\nconst WrapNumber = styled.div`\n  ${flexCenter};\n\n  span {\n    margin-right: 27px;\n  }\n`;\n\nconst ConfirmButton = styled.button`\n  width: 80px;\n  height: 40px;\n  margin-top: 30px;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  background-color: ${theme.pink};\n  outline-style: none;\n\n  &:hover {\n    transform: scale(1.1);\n    transition: 0.2s;\n    cursor: pointer;\n  }\n`;\n\nconst Inputbox = styled.input`\n  width: 300px;\n  height: 40px;\n  padding: 0 5px 0 10px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  outline-style: none;\n`;\n\nconst CertifyNumber = styled.div`\n  ${flexCenter};\n  flex-direction: column;\n  margin-top: 40px;\n\n  span {\n    margin-bottom: 30px;\n    font-size: 16px;\n  }\n`;\n\nconst CertifyInputbox = styled(Inputbox.withComponent(\"input\"))`\n  width: 150px;\n  margin-top: -5px;\n`;\n\n// const SignUpButton = styled(ConfirmButton.withComponent(\"button\"));\nconst SignUpButton = styled.button`\n  width: 250px;\n  height: 40px;\n  margin-top: 90px;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  background-color: ${theme.navy};\n  outline-style: none;\n  font-size: 16px;\n  font-weight: bold;\n\n  &:hover {\n    transform: scale(1.1);\n    transition: 0.2s;\n    cursor: pointer;\n  }\n`;\n","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Result/Result.js",["81","82","83","84"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { SJ_API, HS_API } from \"../../config\";\nimport {\n  boxShadow,\n  justifyCenter,\n  theme,\n  imgUrl,\n} from \"../../styles/CommonStyle\";\nimport HalfDoughnut from \"./Component/HalfDoughnut\";\n\nconst Result = () => {\n  const history = useHistory();\n  const goToMain = () => {\n    history.push(\"/Main\");\n  };\n\n  const [content, setContent] = useState();\n\n  useEffect(() => {\n    fetch(`${SJ_API}/survey/result`, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        setContent(res);\n      });\n  }, []);\n\n  const loss = content && content.loss_evasion_evaluation;\n  const risk = content && content.risk_evasion_evaluation;\n  const resultObj = content && content.evasion_grade;\n  const lossData = content && resultObj[loss];\n  const riskData = content && resultObj[risk];\n\n  return (\n    <Fragment>\n      <WrapResult>\n        <Logo>\n          <img src={imgUrl.logo} alt=\"Logo\" />\n        </Logo>\n        <Explain>\n          <div>나의 유형은 ?</div>\n        </Explain>\n        <Video>\n          <video\n            src=\"https://videos.files.wordpress.com/hQlgtevQ/dolar-man-1024-video_hd.mp4\"\n            autoplay\n            loop\n            muted=\"muted\"\n            playsInline\n            controlsList=\"nodownload\"\n          />\n        </Video>\n        <Doughnut>\n          <div className=\"HalfDoughnut\">\n            <HalfDoughnut\n              lossData={lossData}\n              riskData={riskData}\n              loss={loss}\n              risk={risk}\n            />\n          </div>\n        </Doughnut>\n        <Button onClick={goToMain}>테스트 다시하기</Button>\n      </WrapResult>\n    </Fragment>\n  );\n};\n\nexport default Result;\n\nconst WrapResult = styled.section`\n  ${justifyCenter}\n  flex-direction: column;\n  width: 600px;\n  margin: 50px auto;\n  background-color: rgba(255, 255, 224, 0.2);\n`;\n\nconst Logo = styled.div`\n  ${justifyCenter}\n\n  img {\n    width: 110px;\n    height: 120px;\n  }\n`;\n\nconst Explain = styled.div`\n  div {\n    ${justifyCenter}\n    margin-top: 35px;\n    font-size: 29px;\n    font-weight: 800;\n    color: rgba(0, 0, 0, 0.7);\n  }\n`;\n\nconst Video = styled.div`\n  margin: 0 auto;\n  video {\n    width: 300px;\n    height: 300px;\n  }\n`;\n\nconst Doughnut = styled.div`\n  margin: 0 auto;\n`;\n\nconst Img = styled.div`\n  ${justifyCenter}\n\n  img {\n    width: 300px;\n    height: 300px;\n  }\n`;\n\nconst Content = styled.div`\n  text-align: left;\n  margin: 5px 95px 0;\n  font-size: 15px;\n  line-height: 20px;\n  color: rgba(0, 0, 0, 0.6);\n  letter-spacing: -0.8px;\n\n  div {\n    &:last-child {\n      margin-bottom: 30px;\n    }\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  border: 1px solid #dfdfdf;\n  border-radius: 5px;\n  width: 410px;\n  height: 180px;\n  margin: 0 auto;\n\n  div {\n    &:first-child {\n      font-size: 22px;\n      font-weight: 700;\n      letter-spacing: -0.5px;\n      color: #222;\n      margin-bottom: 24px;\n    }\n\n    &:last-child {\n      font-size: 45px;\n      font-weight: 700;\n      letter-spacing: -0.5px;\n      color: ${theme.pink};\n    }\n  }\n`;\n\nconst Button = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 410px;\n  height: 71px;\n  margin: 40px auto;\n  text-align: center;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 700;\n  background-color: ${theme.pink};\n  color: #fff;\n  border: 1px solid #f2f2f2;\n  border-radius: 30px;\n\n  &:hover {\n    cursor: pointer;\n    ${boxShadow};\n  }\n`;\n","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Survey/Survey.js",["85","86","87","88"],"/* eslint-disable no-const-assign */\n/* eslint-disable eqeqeq */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { SJ_API } from \"../../config\";\nimport { flexCenter, boxShadow, theme, imgUrl } from \"../../styles/CommonStyle\";\nimport ProgressBar from \"./components/ProgressBar\";\n\nconst Survey = () => {\n  const history = useHistory();\n  const [progress, setProgress] = useState();\n  const [survey, setSurvey] = useState();\n  const [oldTime, setOldTime] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const surveyId = survey && survey.id;\n  const surveyContent = survey && survey.content;\n  const questionIdx = surveyContent && surveyContent.indexOf(\"|\") + 1;\n  const firstAnswer = surveyContent && surveyContent.indexOf(\"|\", questionIdx + 1);\n\n  // const testTime = () => {\n  //   const time = +currentTime - +oldTime;\n  //   if (time > 0) {\n  //     return time;\n  //   }\n  // };\n  // console.log(testTime());\n\n  const getSurveyData = () => {\n    fetch(`${SJ_API}/survey/start`, {\n      method: \"GET\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        setProgress(result.progress);\n        setSurvey(result.survey);\n      });\n  };\n\n  const postAnswerA = () => {\n    fetch(`${SJ_API}/survey/input`, {\n      method: \"POST\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        survey_id: survey && survey.id,\n        answer: \"A\",\n        time: 3,\n      }),\n    });\n  };\n\n  const postAnswerB = () => {\n    fetch(`${SJ_API}/survey/input`, {\n      method: \"POST\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        survey_id: surveyId,\n        answer: \"B\",\n        time: 3,\n      }),\n    });\n  };\n\n  const countTime = () => {\n    let getTime = new Date().getSeconds();\n    return getTime;\n  };\n\n  const pressButtonA = () => {\n    postAnswerA();\n    setCurrentTime(countTime());\n    if (survey && survey.id === 13) {\n      history.push(\"/Result\");\n    }\n  };\n\n  const pressButtonB = () => {\n    postAnswerB();\n    setCurrentTime(countTime());\n    if (survey && survey.id === 13) {\n      history.push(\"/Result\");\n    }\n  };\n\n  const resetTest = () => {\n    fetch(`${SJ_API}/survey/reset`, {\n      method: \"POST\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    });\n  };\n\n  useEffect(() => {\n    getSurveyData();\n    // setOldTime(countTime());\n  }, [survey]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Fragment>\n        <WrapSurvey>\n          <SurveyBackground>\n            <Header>\n              <h1>Investment Risk Profiling</h1>\n              <div className=\"surveyName\">\n                Question<span className=\"surveyNumber\">\"{survey && survey.id}\"</span>\n              </div>\n            </Header>\n            <ProgressBar value={(100 / 13) * (survey && survey.id)} max={100} />\n            <WrapMain>\n              <Question>\n                <h1>\n                  <div className=\"emphasis\">\n                    {survey && surveyContent.slice(0, questionIdx - 1)}\n                  </div>\n                </h1>\n              </Question>\n              <Answer>\n                <Button onClick={pressButtonA}>\n                  {survey && surveyContent.slice(questionIdx, firstAnswer)}\n                </Button>\n                <p>vs</p>\n                <Button onClick={pressButtonB}>\n                  {survey && surveyContent.slice(firstAnswer + 1)}\n                </Button>\n              </Answer>\n              <Retest onClick={resetTest}>다시 검사하기</Retest>\n            </WrapMain>\n            <LogoImage src={imgUrl.logo} />\n          </SurveyBackground>\n        </WrapSurvey>\n      </Fragment>\n    </ThemeProvider>\n  );\n};\n\nexport default Survey;\n\nconst WrapSurvey = styled.section`\n  ${flexCenter};\n  flex-direction: column;\n  background-color: #fff;\n`;\n\nconst SurveyBackground = styled.div`\n  height: 100vh;\n  padding: 0 40px;\n  background-color: rgba(255, 255, 224, 0.2);\n  /* background-color: #dfdfdf; */\n`;\n\nconst Header = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 80px 50px 0;\n  color: rgba(0, 0, 0, 0.4);\n  font-size: 18px;\n  font-weight: bold;\n\n  h1 {\n    color: black;\n    font-size: 30px;\n  }\n\n  .surveyName {\n    margin: 25px 0 25px 0;\n    font-size: 22px;\n\n    .surveyNumber {\n      margin-left: 5px;\n      color: ${theme.pink};\n    }\n  }\n`;\n\nconst WrapMain = styled.section`\n  ${flexCenter};\n  flex-direction: column;\n`;\n\nconst Question = styled.div`\n  font-size: 20px;\n  text-align: center;\n\n  h1 {\n    .emphasis {\n      width: 600px;\n      padding: 35px;\n      border-radius: 50px;\n      color: #fff;\n      background-color: ${theme.skyblue};\n      font-weight: bold;\n      line-height: 30px;\n    }\n  }\n`;\n\nconst Answer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 80px 0 50px 0;\n\n  p {\n    padding: 20px 0;\n    color: rgba(0, 0, 0, 0.4);\n    font-size: 24px;\n  }\n`;\n\nconst Button = styled.button`\n  width: 300px;\n  margin: 0 20px;\n  height: 300px;\n  padding: 30px 30px;\n  border: 3.3px solid rgba(0, 0, 0, 0.08);\n  border-radius: 50px;\n  font-size: 22px;\n  font-weight: bold;\n  outline-style: none;\n\n  &:hover {\n    ${boxShadow}\n    cursor: pointer;\n    transform: scale(1.1);\n    transition: 0.3s;\n    border: none;\n    color: #fff;\n    background-color: ${theme.pink};\n  }\n`;\n\nconst Retest = styled.button`\n  width: 200px;\n  height: 60px;\n  margin-top: 20px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 50px;\n  background-color: ${theme.pink};\n  color: #fff;\n  font-size: 18px;\n  font-weight: 700;\n  outline-style: none;\n\n  &:hover {\n    ${boxShadow}\n    cursor: pointer;\n    transform: scale(1.1);\n    transition: 0.2s;\n  }\n`;\n\nconst LogoImage = styled.img`\n  width: 100px;\n  height: 100px;\n\n  margin: auto;\n  margin-top: 50px;\n`;\n","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/SignUp/SignUp.js",["89"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { justifyCenter, theme, imgUrl } from \"../../styles/CommonStyle\";\nimport { SJ_API, SIGNUP_DATA } from \"../../config\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst SignUp = () => {\n  const history = useHistory();\n  const [id, setId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [repw, setRePw] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [month, setMonth] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [nationality, setNationality] = useState(\"\");\n  const [nation, setNation] = useState([]);\n  const [monthBirth, setMonthBirth] = useState([]);\n  const [mailList, setMailList] = useState([]);\n\n  const idValue = id + \"@\" + email;\n  const birthValue = year + \"-\" + month + \"-\" + day;\n\n  useEffect(() => {\n    fetch(SIGNUP_DATA)\n      .then((res) => res.json())\n      .then((res) => setNation(res.nationality));\n    fetch(SIGNUP_DATA)\n      .then((res) => res.json())\n      .then((res) => {\n        setMonthBirth(res.birthMonth);\n        setMailList(res.mail);\n      });\n  }, []);\n\n  console.log(mailList);\n\n  const goToMain = (e) => {\n    e.preventDefault();\n    fetch(`${SJ_API}/user/signup`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: idValue,\n        password: pw,\n        country: nationality,\n        sex: gender,\n        birthday: birthValue,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res.message);\n        if ((res.messege = \"SUCCESS\")) {\n          alert(\"회원가입 성공\");\n          history.push(\"/\");\n        } else {\n          alert(\"실패!\");\n        }\n      });\n  };\n\n  const handleChangeId = (e) => {\n    const { value } = e.target;\n    setId(value);\n  };\n\n  const handleChangeEmail = (e) => {\n    const { value } = e.target;\n    setEmail(value);\n  };\n\n  const handleChangePw = (e) => {\n    const { value } = e.target;\n    setPw(value);\n  };\n\n  const handleChangeRePw = (e) => {\n    const { value } = e.target;\n    setRePw(value);\n  };\n\n  const handleChangeYear = (e) => {\n    const { value } = e.target;\n    setYear(value);\n  };\n\n  const handleChangeMonth = (e) => {\n    const { value } = e.target;\n    setMonth(value);\n  };\n\n  const handleChangeDay = (e) => {\n    const { value } = e.target;\n    setDay(value);\n  };\n\n  const handleChangeGender = (e) => {\n    const { value } = e.target;\n    setGender(value);\n  };\n\n  const handleNationality = (e) => {\n    const { value } = e.target;\n    setNationality(value);\n  };\n\n  console.log(idValue, pw, gender, nationality, birthValue);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Fragment>\n        <Background>\n          <WrapSignUp>\n            <Header>\n              <HeaderImage src={imgUrl.logo} />\n            </Header>\n            <Body>\n              <BodyHeader>회원가입</BodyHeader>\n              <InfoNeed>\n                <WrapEmail>\n                  <h3>이메일</h3>\n                  <WrapInput>\n                    <IdInput\n                      placeholder=\"아이디를 입력해주세요.\"\n                      onChange={handleChangeId}\n                    ></IdInput>\n                    <span>@</span>\n                    <EmailInput onChange={handleChangeEmail}>\n                      <option>이메일을 선택해주세요</option>\n                      {mailList &&\n                        mailList.map((mail) => {\n                          console.log(mail.Email);\n                          return <option>{mail.Email}</option>;\n                        })}\n                    </EmailInput>\n                  </WrapInput>\n                </WrapEmail>\n                <WrapPassword>\n                  <h3>비밀번호</h3>\n                  <p>8자 이상 입력해주세요.</p>\n                  <PwInput type=\"password\" onChange={handleChangePw} />\n                </WrapPassword>\n                <WrapPassword>\n                  <h3>비밀번호 확인</h3>\n                  <PwInput type=\"password\" onChange={handleChangeRePw} />\n                </WrapPassword>\n                <WrapBirth>\n                  <h3>생년월일</h3>\n                  <WrapDateInput>\n                    <DateInput placeholder=\"년\" onChange={handleChangeYear}></DateInput>\n                    <MonthInput onChange={handleChangeMonth}>\n                      <option>월</option>\n                      {monthBirth[0] &&\n                        monthBirth.map((el) => {\n                          return <option key={el.id}>{el.month}</option>;\n                        })}\n                    </MonthInput>\n                    <DateInput placeholder=\"일\" onChange={handleChangeDay}></DateInput>\n                  </WrapDateInput>\n                </WrapBirth>\n                <WrapGender>\n                  <h3>성별</h3>\n                  <WrapGenderInput>\n                    <GenderInput onChange={handleChangeGender}>\n                      <option>선택해주세요</option>\n                      <option>남자</option>\n                      <option>여자</option>\n                    </GenderInput>\n                  </WrapGenderInput>\n                </WrapGender>\n                <WrapNationality>\n                  <h3>국적</h3>\n                  <NationalityInput onChange={handleNationality}>\n                    <option>선택해주세요</option>\n                    {nation[0] &&\n                      nation.map((el) => {\n                        return <option key={el.id}>{el.country}</option>;\n                      })}\n                  </NationalityInput>\n                </WrapNationality>\n              </InfoNeed>\n              <Agreement>\n                <h3>약관 동의</h3>\n                <WrapContents>\n                  <AgreeAll>\n                    <CheckBox type=\"checkbox\" />\n                    <h4>전체 동의</h4>\n                  </AgreeAll>\n                  <Clauses>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>만 14세 이상입니다.</span>\n                    </Clause>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>\n                        <Link to=\"\">이용약관</Link>\n                      </span>\n                    </Clause>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>\n                        <Link to=\"\">개인정보처리방침</Link>\n                      </span>\n                    </Clause>\n                    <Clause>\n                      <CheckBox type=\"checkbox\" />\n                      <span>이벤트, 프로모션 알림 메일 및 SMS 수신</span>\n                    </Clause>\n                  </Clauses>\n                </WrapContents>\n              </Agreement>\n              <CompleteBtn>\n                <Button onClick={goToMain}>회원가입</Button>\n              </CompleteBtn>\n            </Body>\n          </WrapSignUp>\n        </Background>\n      </Fragment>\n    </ThemeProvider>\n  );\n};\n\nexport default SignUp;\n\nconst Background = styled.section`\n  ${justifyCenter}\n`;\n\nconst WrapSignUp = styled.section`\n  width: 400px;\n  padding: 20px;\n`;\n\nconst Header = styled.section`\n  ${justifyCenter}\n  margin: 50px 0 0 0;\n`;\n\nconst HeaderImage = styled.img`\n  width: 110px;\n  height: 120px;\n  margin: 0 0 50px 0;\n`;\n\nconst Body = styled.section``;\n\nconst BodyHeader = styled.h1`\n  font-size: 1.4rem;\n  font-weight: bold;\n  margin: 50px 0;\n`;\n\nconst InfoNeed = styled.div``;\n\nconst WrapEmail = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  padding-top: 50px;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nconst WrapInput = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 15px;\n\n  span {\n    margin: 0 5px;\n    color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst IdInput = styled.input`\n  width: 50%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n\n  &::placeholder {\n    font-size: 13px;\n    color: rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst EmailInput = styled.select`\n  width: 50%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n  padding: 3px;\n`;\n\nconst WrapPassword = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 40px;\n\n  p {\n    margin-top: 15px;\n    color: rgba(0, 0, 0, 0.3);\n    font-size: 14px;\n    font-weight: normal;\n  }\n`;\n\nconst PwInput = styled.input`\n  margin-top: 15px;\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst WrapBirth = styled.div`\n  margin-top: 40px;\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst WrapDateInput = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n\n  span {\n    font-size: 13px;\n    font-weight: normal;\n  }\n`;\n\nconst DateInput = styled.input`\n  width: 31%;\n  height: 35px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst MonthInput = styled.select`\n  width: 31%;\n  height: 35px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst WrapGender = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 40px;\n`;\n\nconst WrapGenderInput = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 15px;\n`;\n\nconst GenderInput = styled.select`\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst WrapNationality = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  margin-top: 40px;\n`;\n\nconst NationalityInput = styled.select`\n  margin-top: 15px;\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 15px;\n  outline-style: none;\n`;\n\nconst Agreement = styled.div`\n  margin-top: 50px;\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst WrapContents = styled.div`\n  margin-top: 30px;\n  padding: 20px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst AgreeAll = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  font-size: 14px;\n`;\n\nconst Clauses = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 13px;\n  font-weight: normal;\n`;\n\nconst Clause = styled.div`\n  display: flex;\n  align-items: center;\n  height: 20px;\n  margin-top: 20px;\n`;\n\nconst CheckBox = styled.input`\n  margin-right: 10px;\n`;\n\nconst CompleteBtn = styled.form`\n  margin: 50px 0 100px 0;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  height: 60px;\n  background-color: #000;\n  border: none;\n  color: white;\n  font-size: 20px;\n  font-weight: 700px;\n  outline-style: none;\n\n  &:hover {\n    transform: scale(1.05);\n    transition: 0.2s;\n    cursor: pointer;\n  }\n`;\n","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/config.js",[],"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Survey/components/ProgressBar.js",["90","91"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { flexCenter, boxShadow, theme, imgUrl } from \"../../../styles/CommonStyle\";\n\nconst ProgressBar = ({ value, max, color, width }) => {\n  ProgressBar.propTypes = {\n    value: PropTypes.number.isRequired,\n    max: PropTypes.number,\n    color: PropTypes.string,\n    width: PropTypes.string,\n  };\n\n  ProgressBar.defaultProps = {\n    max: 100,\n    color: `${theme.pink}`,\n    width: \"300px\",\n  };\n\n  return (\n    <Fragment>\n      <Container color={color} width={width}>\n        <progress value={value} max={max} />\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default ProgressBar;\n\nconst Container = styled.div`\n  ${flexCenter};\n  margin-bottom: 70px;\n\n  progress[value] {\n    width: ${(props) => props.width};\n    -webkit-appearance: none;\n    appearance: none;\n  }\n\n  progress[value]::-webkit-progress-bar {\n    height: 20px;\n    border-radius: 10px;\n    background-color: rgba(0, 0, 0, 0.15);\n  }\n\n  progress[value]::-webkit-progress-value {\n    height: 20px;\n    border-radius: 10px;\n    background-color: ${(props) => props.color};\n  }\n`;\n","/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/SignIn/data/data.js",[],"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Result/Component/HalfDoughnut.js",[],["92","93"],"/Users/julie/Desktop/Zulie/DneuroFrontEnd/src/pages/Main/Component/Footer.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":17,"column":3,"nodeType":"100","endLine":17,"endColumn":12,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":24,"column":3,"nodeType":"100","endLine":24,"endColumn":12,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":37,"nodeType":"100","messageId":"106","endLine":1,"endColumn":46},{"ruleId":"104","severity":1,"message":"107","line":4,"column":10,"nodeType":"100","messageId":"106","endLine":4,"endColumn":16},{"ruleId":"104","severity":1,"message":"108","line":7,"column":10,"nodeType":"100","messageId":"106","endLine":7,"endColumn":18},{"ruleId":"104","severity":1,"message":"109","line":4,"column":18,"nodeType":"100","messageId":"106","endLine":4,"endColumn":24},{"ruleId":"104","severity":1,"message":"110","line":116,"column":7,"nodeType":"100","messageId":"106","endLine":116,"endColumn":10},{"ruleId":"104","severity":1,"message":"111","line":125,"column":7,"nodeType":"100","messageId":"106","endLine":125,"endColumn":14},{"ruleId":"104","severity":1,"message":"112","line":140,"column":7,"nodeType":"100","messageId":"106","endLine":140,"endColumn":16},{"ruleId":"104","severity":1,"message":"113","line":12,"column":10,"nodeType":"100","messageId":"106","endLine":12,"endColumn":18},{"ruleId":"104","severity":1,"message":"114","line":14,"column":10,"nodeType":"100","messageId":"106","endLine":14,"endColumn":17},{"ruleId":"104","severity":1,"message":"115","line":14,"column":19,"nodeType":"100","messageId":"106","endLine":14,"endColumn":29},{"ruleId":"104","severity":1,"message":"116","line":15,"column":10,"nodeType":"100","messageId":"106","endLine":15,"endColumn":21},{"ruleId":"104","severity":1,"message":"117","line":12,"column":10,"nodeType":"100","messageId":"106","endLine":12,"endColumn":14},{"ruleId":"104","severity":1,"message":"118","line":4,"column":22,"nodeType":"100","messageId":"106","endLine":4,"endColumn":31},{"ruleId":"104","severity":1,"message":"119","line":4,"column":40,"nodeType":"100","messageId":"106","endLine":4,"endColumn":46},{"ruleId":"94","replacedBy":"120"},{"ruleId":"96","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isLogin, isKakaoLogin] as a second argument to the useEffect Hook.","Identifier",["124"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isToken, isKakaoToken] as a second argument to the useEffect Hook.",["125"],"no-unused-vars","'useEffect' is defined but never used.","unusedVar","'SJ_API' is defined but never used.","'userName' is assigned a value but never used.","'HS_API' is defined but never used.","'Img' is assigned a value but never used.","'Content' is assigned a value but never used.","'Container' is assigned a value but never used.","'progress' is assigned a value but never used.","'oldTime' is assigned a value but never used.","'setOldTime' is assigned a value but never used.","'currentTime' is assigned a value but never used.","'repw' is assigned a value but never used.","'boxShadow' is defined but never used.","'imgUrl' is defined but never used.",["122"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Add dependencies array: [isLogin, isKakaoLogin]",{"range":"130","text":"131"},"Add dependencies array: [isToken, isKakaoToken]",{"range":"132","text":"133"},[751,751],", [isLogin, isKakaoLogin]",[876,876],", [isToken, isKakaoToken]"]