{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jooneybadger/Desktop/JOONEY/wecode/\\u1100\\u1175\\u110B\\u1165\\u11B8\\u1112\\u1167\\u11B8\\u110B\\u1165\\u11B8-project/dneuro-frontend/src/pages/Survey/Survey.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-const-assign */\n\n/* eslint-disable eqeqeq */\nimport { cleanup } from \"@testing-library/react\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { AWS_API } from \"../../config\";\nimport { flexCenter, boxShadow, theme, imgUrl } from \"../../styles/CommonStyle\";\n\nconst Survey = () => {\n  _s();\n\n  const history = useHistory();\n  const [progress, setProgress] = useState();\n  const [survey, setSurvey] = useState();\n  const [oldTime, setOldTime] = useState();\n  const [currentTime, setCurrentTime] = useState(0);\n  const progressCurrent = progress && progress.current;\n  const progressTotal = progress && progress.total;\n  const surveyId = survey && survey.id;\n  const surveyContent = survey && survey.content;\n  const questionIdx = surveyContent && surveyContent.indexOf(\"A\");\n  const firstAnswer = surveyContent && surveyContent.indexOf(\"B\");\n  console.log(survey);\n\n  const getSurveyData = () => {\n    fetch(`${AWS_API}/survey/start`, {\n      method: \"GET\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    }).then(res => res.json()).then(result => {\n      setProgress(result.progress);\n      setSurvey(result.survey);\n    });\n  };\n\n  const countTime = () => {\n    let getTime = new Date().getSeconds();\n    return getTime;\n  };\n\n  useEffect(() => {\n    getSurveyData();\n    setOldTime(countTime());\n  }, []);\n\n  const postAnswerA = () => {\n    fetch(`${AWS_API}/survey/input`, {\n      method: \"POST\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        survey_id: survey && survey.id,\n        answer: \"A\",\n        time: testTime\n      })\n    }).then(res => res.json()).then(res => {\n      setCurrentTime(countTime());\n\n      if (res.survey.survey.id > 6) {\n        history.push(\"/Result\");\n      }\n    });\n  };\n\n  const testTime = +currentTime - +oldTime;\n  console.log(testTime);\n\n  const postAnswerB = () => {\n    fetch(`${AWS_API}/survey/input`, {\n      method: \"POST\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        survey_id: surveyId,\n        answer: \"B\",\n        time: 20\n      })\n    }).then(res => res.json()).then(res => console.log(res));\n  };\n\n  const resetTest = () => {\n    fetch(`${AWS_API}/survey/reset`, {\n      method: \"POST\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    }).then(res => res.json()).then(res => console.log(res));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(WrapSurvey, {\n        children: /*#__PURE__*/_jsxDEV(SurveyBackground, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Investment Risk Profiling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WrapMain, {\n            children: [/*#__PURE__*/_jsxDEV(Question, {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"emphasis\",\n                  children: survey && surveyContent.slice(0, questionIdx)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Answer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: postAnswerA,\n                children: survey && surveyContent.slice(questionIdx, firstAnswer)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"vs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: postAnswerB,\n                children: survey && surveyContent.slice(firstAnswer)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"WrapBottomButton\",\n                children: /*#__PURE__*/_jsxDEV(Retest, {\n                  onClick: resetTest,\n                  children: \"\\uB2E4\\uC2DC \\uAC80\\uC0AC\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LogoImage, {\n            src: imgUrl.logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Survey, \"kPzaqEWsFwEqC+a5DGk0z61t2hU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Survey;\nexport default Survey;\nconst WrapSurvey = styled.section`\n  ${flexCenter};\n  flex-direction: column;\n`;\n_c2 = WrapSurvey;\nconst SurveyBackground = styled.div`\n  height: 100vh;\n  padding: 0 40px;\n  background-color: ${theme.ligthblue};\n`;\n_c3 = SurveyBackground;\nconst Header = styled.section`\n  display: flex;\n  justify-content: center;\n  padding: 80px 50px 0;\n  color: rgba(0, 0, 0, 0.4);\n  font-size: 18px;\n  font-weight: bold;\n`;\n_c4 = Header;\nconst WrapMain = styled.section`\n  padding-top: 80px;\n`;\n_c5 = WrapMain;\nconst Question = styled.div`\n  font-size: 20px;\n  text-align: center;\n\n  h1 {\n    .emphasis {\n      width: 380px;\n      padding: 35px;\n      border-radius: 50px;\n      color: #fff;\n      background-color: ${theme.skyblue};\n      font-weight: bold;\n      line-height: 30px;\n    }\n  }\n`;\n_c6 = Question;\nconst Answer = styled.div`\n  ${flexCenter};\n  flex-direction: column;\n  padding-top: 80px;\n\n  p {\n    padding: 10px 0;\n    color: rgba(0, 0, 0, 0.4);\n    font-size: 24px;\n  }\n`;\n_c7 = Answer;\nconst Button = styled.button`\n  width: 360px;\n  padding: 30px 50px;\n  border: 2px solid rgba(0, 0, 0, 0.08);\n  border-radius: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  outline-style: none;\n\n  &:hover {\n    ${boxShadow}\n    cursor: pointer;\n    transform: scale(1.1);\n    transition: 0.3s;\n    border: none;\n    color: #fff;\n    background-color: ${theme.pink};\n  }\n`;\n_c8 = Button;\nconst Retest = styled.button`\n  width: 200px;\n  height: 60px;\n  margin: 50px 10px 0 20px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 50px;\n  background-color: ${theme.pink};\n  color: #fff;\n  font-size: 18px;\n  font-weight: 700;\n  outline-style: none;\n\n  &:hover {\n    ${boxShadow}\n    cursor: pointer;\n    transform: scale(1.1);\n    transition: 0.2s;\n  }\n`;\n_c9 = Retest;\nconst LogoImage = styled.img`\n  width: 100px;\n  height: 100px;\n\n  margin: auto;\n  margin-top: 50px;\n`;\n_c10 = LogoImage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Survey\");\n$RefreshReg$(_c2, \"WrapSurvey\");\n$RefreshReg$(_c3, \"SurveyBackground\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"WrapMain\");\n$RefreshReg$(_c6, \"Question\");\n$RefreshReg$(_c7, \"Answer\");\n$RefreshReg$(_c8, \"Button\");\n$RefreshReg$(_c9, \"Retest\");\n$RefreshReg$(_c10, \"LogoImage\");","map":{"version":3,"sources":["/Users/jooneybadger/Desktop/JOONEY/wecode/기업협업-project/dneuro-frontend/src/pages/Survey/Survey.js"],"names":["cleanup","React","Fragment","useEffect","useState","styled","createGlobalStyle","ThemeProvider","useHistory","AWS_API","flexCenter","boxShadow","theme","imgUrl","Survey","history","progress","setProgress","survey","setSurvey","oldTime","setOldTime","currentTime","setCurrentTime","progressCurrent","current","progressTotal","total","surveyId","id","surveyContent","content","questionIdx","indexOf","firstAnswer","console","log","getSurveyData","fetch","method","headers","Authorization","localStorage","getItem","then","res","json","result","countTime","getTime","Date","getSeconds","postAnswerA","body","JSON","stringify","survey_id","answer","time","testTime","push","postAnswerB","resetTest","slice","logo","WrapSurvey","section","SurveyBackground","div","ligthblue","Header","WrapMain","Question","skyblue","Answer","Button","button","pink","Retest","LogoImage","img"],"mappings":"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","sourcesContent":["/* eslint-disable no-const-assign */\n/* eslint-disable eqeqeq */\nimport { cleanup } from \"@testing-library/react\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { AWS_API } from \"../../config\";\nimport { flexCenter, boxShadow, theme, imgUrl } from \"../../styles/CommonStyle\";\n\nconst Survey = () => {\n  const history = useHistory();\n  const [progress, setProgress] = useState();\n  const [survey, setSurvey] = useState();\n  const [oldTime, setOldTime] = useState();\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const progressCurrent = progress && progress.current;\n  const progressTotal = progress && progress.total;\n  const surveyId = survey && survey.id;\n  const surveyContent = survey && survey.content;\n  const questionIdx = surveyContent && surveyContent.indexOf(\"A\");\n  const firstAnswer = surveyContent && surveyContent.indexOf(\"B\");\n\n  console.log(survey);\n\n  const getSurveyData = () => {\n    fetch(`${AWS_API}/survey/start`, {\n      method: \"GET\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setProgress(result.progress);\n        setSurvey(result.survey);\n      });\n  };\n\n  const countTime = () => {\n    let getTime = new Date().getSeconds();\n    return getTime;\n  };\n\n  useEffect(() => {\n    getSurveyData();\n    setOldTime(countTime());\n  }, []);\n\n  const postAnswerA = () => {\n    fetch(`${AWS_API}/survey/input`, {\n      method: \"POST\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        survey_id: survey && survey.id,\n        answer: \"A\",\n        time: testTime,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setCurrentTime(countTime());\n\n        if (res.survey.survey.id > 6) {\n          history.push(\"/Result\");\n        }\n      });\n  };\n\n  const testTime = +currentTime - +oldTime;\n  console.log(testTime);\n\n  const postAnswerB = () => {\n    fetch(`${AWS_API}/survey/input`, {\n      method: \"POST\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        survey_id: surveyId,\n        answer: \"B\",\n        time: 20,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => console.log(res));\n  };\n\n  const resetTest = () => {\n    fetch(`${AWS_API}/survey/reset`, {\n      method: \"POST\",\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => console.log(res));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Fragment>\n        <WrapSurvey>\n          <SurveyBackground>\n            <Header>\n              <span>Investment Risk Profiling</span>\n            </Header>\n            <WrapMain>\n              <Question>\n                <h1>\n                  <div className=\"emphasis\">{survey && surveyContent.slice(0, questionIdx)}</div>\n                </h1>\n              </Question>\n              <Answer>\n                <Button onClick={postAnswerA}>\n                  {survey && surveyContent.slice(questionIdx, firstAnswer)}\n                </Button>\n                <p>vs</p>\n                <Button onClick={postAnswerB}>{survey && surveyContent.slice(firstAnswer)}</Button>\n                <div className=\"WrapBottomButton\">\n                  <Retest onClick={resetTest}>다시 검사하기</Retest>\n                </div>\n              </Answer>\n            </WrapMain>\n            <LogoImage src={imgUrl.logo} />\n          </SurveyBackground>\n        </WrapSurvey>\n      </Fragment>\n    </ThemeProvider>\n  );\n};\n\nexport default Survey;\n\nconst WrapSurvey = styled.section`\n  ${flexCenter};\n  flex-direction: column;\n`;\n\nconst SurveyBackground = styled.div`\n  height: 100vh;\n  padding: 0 40px;\n  background-color: ${theme.ligthblue};\n`;\n\nconst Header = styled.section`\n  display: flex;\n  justify-content: center;\n  padding: 80px 50px 0;\n  color: rgba(0, 0, 0, 0.4);\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst WrapMain = styled.section`\n  padding-top: 80px;\n`;\n\nconst Question = styled.div`\n  font-size: 20px;\n  text-align: center;\n\n  h1 {\n    .emphasis {\n      width: 380px;\n      padding: 35px;\n      border-radius: 50px;\n      color: #fff;\n      background-color: ${theme.skyblue};\n      font-weight: bold;\n      line-height: 30px;\n    }\n  }\n`;\n\nconst Answer = styled.div`\n  ${flexCenter};\n  flex-direction: column;\n  padding-top: 80px;\n\n  p {\n    padding: 10px 0;\n    color: rgba(0, 0, 0, 0.4);\n    font-size: 24px;\n  }\n`;\n\nconst Button = styled.button`\n  width: 360px;\n  padding: 30px 50px;\n  border: 2px solid rgba(0, 0, 0, 0.08);\n  border-radius: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  outline-style: none;\n\n  &:hover {\n    ${boxShadow}\n    cursor: pointer;\n    transform: scale(1.1);\n    transition: 0.3s;\n    border: none;\n    color: #fff;\n    background-color: ${theme.pink};\n  }\n`;\n\nconst Retest = styled.button`\n  width: 200px;\n  height: 60px;\n  margin: 50px 10px 0 20px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 50px;\n  background-color: ${theme.pink};\n  color: #fff;\n  font-size: 18px;\n  font-weight: 700;\n  outline-style: none;\n\n  &:hover {\n    ${boxShadow}\n    cursor: pointer;\n    transform: scale(1.1);\n    transition: 0.2s;\n  }\n`;\n\nconst LogoImage = styled.img`\n  width: 100px;\n  height: 100px;\n\n  margin: auto;\n  margin-top: 50px;\n`;\n"]},"metadata":{},"sourceType":"module"}